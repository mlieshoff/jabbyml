/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#set($packageName=$replacer.getPackageName($properties, $object))
package ${packageName};
#set($basePackageName=$replacer.getBasePackageName($properties))

#if($object.attribute.size()>0)
import java.util.List;
import java.util.Map;
#end
import jabbyml.essentials.common.Request;
import lombok.Builder;

#set($responseType=${replacer.findContextValue($object.getContext(), 'responseType')})
public class ${filename} extends Request {

  #foreach( $attribute in $object.attribute )
  private final ${replacer.getTypeName($attribute.type)} ${replacer.getAttributeName($attribute.name)};
  #end

  @Builder
  private ${filename}(boolean storeRawResponse#if($object.attribute.size() > 0), #end${replacer.concatAttributes($object.attribute, ', ', '{type} {name}')}) {
    super(storeRawResponse);
    #foreach( $attribute in $object.attribute )
    this.${replacer.getAttributeName($attribute.name)} = ${replacer.getAttributeName($attribute.name)};
    #end
  }

  public static ${filename}Builder builder(${replacer.concatAttributes($helper.getMandatoryAttributes($object), ', ', '{type} {name}')}) {
    return new ${filename}Builder()
      #foreach( $attribute in $helper.getMandatoryAttributes($object) )
      .${replacer.getAttributeName($attribute.name)}(${replacer.getAttributeName($attribute.name)})
      #end
    ;
  }

#parse("generic-requestParameters.vm")
}